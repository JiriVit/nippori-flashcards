<Page x:Class="Nippori.Pages.FlashcardPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Nippori.Pages"
      xmlns:conv="clr-namespace:Nippori.Converters"
      xmlns:mscor="clr-namespace:System;assembly=mscorlib"
      xmlns:controls="clr-namespace:Nippori.Controls"
      xmlns:viewmodel="clr-namespace:Nippori.ViewModel"
      d:DataContext="{d:DesignInstance Type=viewmodel:FlashCardsViewModel}"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="FlashcardPage">

    <Page.Resources>
        <Style TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="RichTextBox">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <conv:BoolToBrushConverter x:Key="BoolToBrush"/>
    </Page.Resources>
    
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="Border">
                <Setter Property="Margin" Value="3" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="60"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="FontSize" Value="40"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="IsEnabled" Value="{Binding FileLoaded}"/>
                <EventSetter Event="Click" Handler="Button_Click"/>
                <EventSetter Event="PreviewKeyDown" Handler="ToggleButton_PreviewKeyDown"/>
            </Style>
            <Style TargetType="ToggleButton">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="60"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="FontSize" Value="40"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="IsEnabled" Value="{Binding FileLoaded}"/>
                <Setter Property="IsTabStop" Value="False"/>
                <EventSetter Event="PreviewKeyDown" Handler="ToggleButton_PreviewKeyDown"/>
            </Style>
        </Grid.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding StackCount, FallbackValue=10}" FontSize="60" Background="LightGreen"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Content="R" Tag="EnableAll"/>
                <ToggleButton Content="A" IsChecked="{Binding ActiveVocablesEnabled}"/>
                <ToggleButton Content="E" IsChecked="{Binding EasyVocablesEnabled}"/>
                <ToggleButton Content="D" IsChecked="{Binding DifficultVocablesEnabled}"/>
                <ToggleButton Content="J" IsChecked="{Binding JlptKanjiOnly}" 
                              Visibility="{Binding JlptKanjiOnlyVisible, Converter={StaticResource BoolToVis}}"/>
            </StackPanel>
        </Grid>
        
        <!-- Field 0: The text being always shown -->
        <controls:VocableField Grid.Row="1" Text="{Binding Fields[0]}" FontSize="80"
                               Background="LightGray"
                               CharacterMouseDown="VocableField_CharacterMouseDown"
                               ButtonClick="VocableField_ButtonClick"/>
        <!--
        <Border Grid.Row="1" Margin="6" Background="LightGray" CornerRadius="15">
            <TextBlock Text="{Binding Fields[0]}" Visibility="{Binding FieldsVisibility[0]}" FontSize="80" Foreground="DarkBlue"
                       FontFamily="{Binding FieldFontFamily[0]}"
                       Cursor="Hand" MouseDown="TextBlock_MouseDown"/>
        </Border>-->
        
        <!-- Field 1: First item shown optionally -->
        <Border Grid.Row="2">
            <Border.Background>
                <Binding Path="FieldsEmphasized[1]" Converter="{StaticResource BoolToBrush}">
                    <Binding.ConverterParameter>
                        <x:Array Type="Brush">
                            <SolidColorBrush Color="LightBlue"/>
                            <SolidColorBrush Color="LightSalmon"/>
                        </x:Array>
                    </Binding.ConverterParameter>
                </Binding>
            </Border.Background>
            <TextBlock Text="{Binding Fields[1]}" Visibility="{Binding FieldsVisibility[1]}" FontSize="60"
                       FontFamily="{Binding FieldFontFamily[1]}"
                       Cursor="Hand" MouseDown="TextBlock_MouseDown"/>
        </Border>
        
        <!-- Field 2: Second item shown optionally -->
        <Border Grid.Row="3" Background="LightBlue">
            <TextBlock Text="{Binding Fields[2]}" Visibility="{Binding FieldsVisibility[2]}" FontSize="60"
                       FontFamily="{Binding FieldFontFamily[2]}" Margin="0,6,-0.4,8.4"
                       Cursor="Hand" MouseDown="TextBlock_MouseDown"/>
        </Border>
        
        <!-- Field 3: For notes -->
        <Border Grid.Row="4" Background="LightYellow">
            <TextBlock Text="{Binding Fields[3]}" Visibility="{Binding FieldsVisibility[3]}" FontSize="40" FontStyle="Italic"/>
        </Border>
    </Grid>
</Page>
